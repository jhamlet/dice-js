
var Behavior = require("dice-js/behavior"),
    Factory  = require("dice-js/factory")
;

//---------------------------------------------------------------------------
// Star Wars Helpers
//---------------------------------------------------------------------------
function starWarsBehavior (name, columns, table) {

    function results (dice, values) {
        var cols  = this.columns,
            table = this.table
        ;
        
        return values.map(function (result) {
            return cols.reduce(function (acc, col, idx) {
                acc[col] = table[idx][result];
                return acc;
            }, {});
        });
    }
    
    function result (dice, value) {
        return dice.results.reduce(function (acc, result) {
            Object.keys(result).forEach(function (key) {
                if (acc.hasOwnPoperty(key)) {
                    acc[key] += result[key];
                }
                else {
                    acc[key] = result[key];
                }
            });
            return acc;
        }, {});
    }
    
    return new Behavior("FfgStarWars" + name, {
        columns: columns,
        table:   table,
        results: results,
        result:  result
    });
}

function starWarsFactory (name, faces, behavior) {
    new Factory("FfgStarWars" + name, faces, "FfgStarWars" + behavior);
}
//---------------------------------------------------------------------------
// Star Wars Definitions
//---------------------------------------------------------------------------
starWarsBehavior("BoostDie",
    ["success", "advantage"],
    [ 
        [0, 0],
        [0, 0],
        [0, 2],
        [2, 0],
        [0, 1],
        [0, 1]
    ]
);
starWarsFactory("BoostDice", 6, "BoostDie");

starWarsBehavior("SetbackDie",
    ["failure", "threat"],
    [ 
        [0, 0],
        [0, 0],
        [1, 0],
        [1, 0],
        [0, 1],
        [0, 1]
    ]
);
starWarsFactory("SetBackDice", 6, "SetbackDie");

starWarsBehavior("AbilityDie", 
    ["success", "advantage"],
    [ 
        [0, 0],
        [1, 0],
        [1, 0],
        [2, 0],
        [0, 1],
        [0, 1],
        [1, 1],
        [0, 2]
    ]
);
starWarsFactory("AbilityDice", 8, "AbilityDie");

starWarsBehavior("DifficultyDie", 
    ["failure", "threat"],
    [ 
        [0, 0],
        [1, 0],
        [2, 0],
        [0, 1],
        [0, 1],
        [0, 1],
        [0, 2],
        [1, 1]
    ]
);
starWarsFactory("DifficultyDice", 8, "DifficultyDie");

starWarsBehavior("ProficiencyDie", 
    ["success", "advantage", "triumph"],
    [
        [0, 0, 0],
        [1, 0, 0],
        [1, 0, 0],
        [2, 0, 0],
        [2, 0, 0],
        [0, 1, 0],
        [1, 1, 0],
        [1, 1, 0],
        [1, 1, 0],
        [0, 2, 0],
        [0, 2, 0],
        [0, 0, 1]
    ]
);
starWarsFactory("ProficiencyDice", 12, "ProficiencyDie");

starWarsBehavior("ChallengeDie", 
    ["failure", "threat", "despair"],
    [
        [0, 0, 0],
        [1, 0, 0],
        [1, 0, 0],
        [2, 0, 0],
        [2, 0, 0],
        [0, 1, 0],
        [0, 1, 0],
        [1, 1, 0],
        [1, 1, 0],
        [0, 2, 0],
        [0, 2, 0],
        [0, 0, 1]
    ]
);
starWarsFactory("ChallengeDice", 12, "ChallengeDie");

starWarsBehavior("ForceDie", 
    ["lightside", "darkside"],
    [
        [0, 1],
        [0, 1],
        [0, 1],
        [0, 1],
        [0, 1],
        [0, 1],
        [0, 2],
        [1, 0],
        [1, 0],
        [2, 0],
        [2, 0],
        [2, 0]
    ]
);
starWarsFactory("ForceDice", 12, "ForceDie");
