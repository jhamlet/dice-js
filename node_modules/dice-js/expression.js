
var Proteus = require("proteus");

module.exports = Proteus.Class.derive(Object.defineProperties({
    
    self: {
        makeOperator: function (name, symbol) {
            this.prototype[symbol] = function () {
                
            }
        }
    },
    
    init: function () {
        this.members = [];
        Proteus.slice(arguments).forEach(this.add, this);
    },
    
    get: function (idx) {
        return this.members[idx];
    },
    
    add: function (exp) {
        return this.members.push(exp);
    },
    
    remove: function (idx) {
        return this.members.splice(idx, 1);
    },
    
    reset: function () {
        this.members.length = 0;
        return this;
    }
    
}, {
    count: {
        get: function () {
            return this.members.length;
        },
        set: function (v) {
            this.members.length = v;
        }
    },
    
    valueOf: { value: function () {
        var results = [],
            len     = this.count,
            i
        ;
        
        for (i = 0; i < len; i++) {
            results.push(this.get(i).valueOf());
        }
        
        return results.length <= 1 ? results[0] : results;
    } }
}));

